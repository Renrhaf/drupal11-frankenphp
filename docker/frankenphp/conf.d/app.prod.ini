error_reporting = E_ALL & ~E_DEPRECATED & ~E_STRICT
display_errors = Off

# Performance optimizations
# https://symfony.com/doc/current/performance.html

# OPcache is a PHP extension that improves application performance by storing precompiled script opcodes in shared memory.
# It removes the need to load, parse and compile PHP files on every request.
# When the opcache.enable_file_override ini setting is enabled, OPcache is used when calling file_exists, is_file and is_readable.
# This improves your application performance by saving some calls to stat those files, which is specially significant for class autoloaders.
# https://www.php.net/manual/fr/opcache.configuration.php#ini.opcache.enable-file-override
opcache.enable_file_override = 1

# maximum number of files that can be stored in the cache
opcache.max_accelerated_files = 20000

# maximum memory that OPcache can use to store compiled PHP files
opcache.memory_consumption = 256

# check PHP files timestamps
opcache.validate_timestamps = 1

# maximum memory allocated to store the results
realpath_cache_size = 4096K

# The expose_php ini setting exposes the PHP version used by your applications by adding a X-Powered-By header in HTTP responses.
# This information may help malicious users because they can use the specific vulnerabilities known for your exact PHP version.
expose_php=off

# When the session.use_strict_mode ini setting is disabled, PHP session module accepts uninitialized session ids and uses them without further validation.
# When the setting is enabled, if an uninitialized session id is sent, a new session id is generated and sent back to the browser.
# Disabling this setting makes you vulnerable to session fixation attacks and therefore, you should always enable it using session.use_strict_mode=On.
session.use_strict_mode=On

# The zend.assertions ini setting enables the execution of the assertions defined with the assert function.
# These asserts are used for debugging purposes, usually to check the value of functions parameters.
# As this setting can be deactivated in the PHP configuration file, it makes your application non portable and therefore should be used only while developing applications.
# If you want to ensure business rules in your code, use Exceptions instead.
# This will also bring you extra performance from not running these assertions in production.
zend.assertions=-1

# The zend.detect_unicode ini setting, when enabled, checks scripts for BOM and see if the file contains valid multibyte characters.
# This feature is known to produce issues when running phar executables and should be disabled using zend.detect_unicode=Off.
# You should also configure your code editor to never use BOMs.
zend.detect_unicode=Off

# The realpath function returns the absolute path for any given relative file path.
# This conversion takes a non-negligible time because it performs some filesystem calls.
# That’s why PHP caches the results of realpath calls and their associated stat calls.
# The realpath information is only cached for file paths that exist and is used for most of the PHP filesystem calls.
# Complex applications involve a lot of file operations, so this cache has a significant impact in your application performance.
# The realpath_cache_ttl ini setting controls the time in seconds for which the realpath information is cached for a given file or directory.
# In production, files are not supposed to be updated, so you must increase this cache time at least to one hour using realpath_cache_ttl=3600.
realpath_cache_ttl=3600

# The session garbage collector should be disabled in production.
# The garbage collection process is a blocking process, meaning that when it starts, the current request must wait until the recollection finishes.
# This behavior may impact the performance as perceived by end users.
# Recommended to disable the garbage collection process for sessions and use a cron job instead to remove the expired sessions.
session.gc_probability=0

# The amount of memory used to store interned strings, in megabytes.
# Interned strings are a nice memory optimization that was added in PHP 5.4.
# PHP stores immutable strings into a special buffer to be able to reuse its pointer for all occurrences of the same string.
# Blackfire recommends that the interned strings buffer does not represent more than 85% of the allocated memory.
opcache.interned_strings_buffer=32

# The display_startup_errors ini setting displays the full contents of the PHP startup sequence’s errors in the
# web page for web applications or the command console output for scripts and commands.
# These errors are generally related to PHP extensions and some of them may leak sensitive information or even prevent sending HTTP headers.
# Displaying these messages is useful in development to debug configuration issues. However, displaying them in production is a bad practice you should avoid.
display_startup_errors=off
